{"version":3,"file":"static/webpack/static/development/pages/update.js.9b9324c663f337e39003.hot-update.js","sources":["webpack:///./components/Test.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\nconst SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      description\n      price\n      }\n  } \n`; \nconst UPDATE_ITEM_MUTATION = gql`\n  mutation UPDATE_ITEM_MUTATION($id: ID!, $title: String, $description: String, $price: Int) {\n    updateItem(id: $id, title: $title, description: $description, price: $price) {\n      id\n      title\n      description\n      price\n    }\n  }\n`;\n\n\nclass UpdateItem extends Component {\n  state = {};\n  // handleChange = e => {\n  //   const { name, type, value } = e.target;\n  //   const val = type === 'number' ? parseFloat(value) : value;\n  //   this.setState({ [name]: val });\n  // };\n  // updateItem = async (e, updateItemMutation) => {\n  //   e.preventDefault();\n  //   console.log('Updating Item!!');\n  //   console.log(this.state);\n  //   const res = await updateItemMutation({\n  //     variables: {\n  //       id: this.props.id,\n  //       ...this.state,\n  //     },\n  //   });\n  //     console.log('Updated!!');\n  // };\n\n  render() {\n    return (\n      <Query\n      query={SINGLE_ITEM_QUERY}\n      variables={{\n        id: this.props.id,\n      }}\n        >\n        {({data, loading }) => {\n          if (loading) return <p>Loading...</p>;\n          if (!data.item) return <p>No Item Found for ID {this.props.id}</p>;\n          return (\n            <Form>\n                <label htmlFor=\"title\">\n                  Title\n                  <input\n                    type=\"text\"\n                    id=\"title\"\n                    name=\"title\"\n                    placeholder=\"Title\"\n                    required\n                    defaultValue={data.item.title}\n                  />\n                </label>\n\n                <label htmlFor=\"price\">\n                  Price\n                  <input\n                    type=\"number\"\n                    id=\"price\"\n                    name=\"price\"\n                    placeholder=\"Price\"\n                    required\n                    defaultValue={data.item.price}\n                  />\n                </label>\n\n                <label htmlFor=\"description\">\n                  Description\n                  <textarea\n                    id=\"description\"\n                    name=\"description\"\n                    placeholder=\"Enter A Description\"\n                    required\n                    defaultValue={data.item.description}\n                  />\n                </label>\n                <button type=\"submit\"></button>\n            </Form>\n          )\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default UpdateItem;\nexport { UPDATE_ITEM_MUTATION };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAUA;AACA;AAWA;;;;;;;;;;;;;;;;;;AACA;AACA;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAGA;;;;AAzEA;AACA;AA2EA;;;;;A","sourceRoot":""}